<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Group Chat</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body class="h-screen flex bg-gray-100">




    <main class="flex-1 flex flex-col">

        <div id="RoomName" class="p-4 border-b bg-white shadow-sm font-semibold" other_user_id="" chatType="">
            <%= user.username%>
        </div>


        <div id="messages" class="flex-1 overflow-y-auto p-4 space-y-3 bg-gray-50">
            <% messages.forEach((msg)=> { %>
                <% if (msg.sender.toString()===userId.toString()) { %>
                    
                    <div class="flex justify-end">
                        <div class="max-w-xs bg-blue-500 text-white px-4 py-2 rounded-2xl shadow-md">
                            <%= msg.message %>
                        </div>
                    </div>
                    <% } else { %>
                        
                        <div class="flex justify-start">
                            <div class="max-w-xs bg-gray-200 text-gray-800 px-4 py-2 rounded-2xl shadow-md">
                                <%= msg.message %>
                            </div>
                        </div>
                        <% } %>
                            <% }) %>
        </div>




        <div class="p-4 bg-white border-t flex gap-2">
            <input id="messageInput" type="text" placeholder="Type a message..."
                class="flex-1 px-4 py-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-blue-400" />
            <button id="sendBtn"
                class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
            </button>
        </div>
    </main>

    <script>
        const sendBtn = document.getElementById("sendBtn");
        const input = document.getElementById("messageInput");
        const messagesDiv = document.getElementById("messages");
        const userId = "<%= userId %>";
        let otherId = document.getElementById("RoomName").getAttribute("other_user_id");
        const socket = io({
            auth: {
                token: '<%= userId %>'
            }
        });




        socket.on('chatMessage', (msg) => {

            const wrapper = document.createElement("div");
            wrapper.classList.add("flex", "mb-2");

            if (msg.sender.toString() === userId.toString()) {
                wrapper.classList.add("justify-end");
            } else {
                wrapper.classList.add("justify-start");
            }

            const msgDiv = document.createElement("div");
            msgDiv.classList.add(
                "p-3",
                "rounded-lg",
                "shadow-sm",
                "max-w-xs",
                "md:max-w-md"
            );

            if (msg.sender.toString() === userId.toString()) {

                msgDiv.classList.add("bg-indigo-500", "text-white", "rounded-br-none");
            } else {
                msgDiv.classList.add("bg-white", "text-gray-800", "rounded-bl-none");
            }

            msgDiv.textContent = msg.message;

            wrapper.appendChild(msgDiv);
            messagesDiv.appendChild(wrapper);

            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        });

        sendBtn.addEventListener("click", () => {
            const text = input.value.trim();
            if (!text) return;
            let chatType = document.getElementById("RoomName").getAttribute('chatType');
            console.log({ text, chatType })
            if (chatType === "Private") {
                socket.emit("chatMessage", {
                    message: text,
                    sender: userId,
                    receiver: otherId
                });
            } else if (chatType === "Group") {
                console.log(otherId)
                socket.emit("groupMessage", {

                    message: text,
                    sender: userId,
                    groupId: otherId
                });
            }

            input.value = "";

        });

        function selectUser(element, id) {
            otherId = id;

            document.getElementById("RoomName").innerText = element ? element.innerText : "None";
            document.getElementById("RoomName").setAttribute("other_user_id", id);
            document.getElementById("RoomName").setAttribute('chatType', "Private");
            messagesDiv.innerHTML = '';

            socket.emit('joinRoom', { userId, otherId });
        }

        function selectGroup(element, id) {
            otherId = id;
            groupId = id;
            document.getElementById("RoomName").innerText = element ? element.innerText : "None";
            document.getElementById("RoomName").setAttribute("other_user_id", id);
            document.getElementById("RoomName").setAttribute('chatType', "Group");
            messagesDiv.innerHTML = '';
            // console.log({ userId, otherId });
            socket.emit('joinGroup', { userId, groupId });
        }



    </script>


</body>

</html>