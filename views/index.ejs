<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Group Chat</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body class="h-screen flex bg-gray-100">
    <!-- Sidebar -->
    <aside class="w-64 bg-white shadow-lg border-r flex flex-col hide-scrollbar">
        <div class="p-4 font-bold text-lg border-b flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M17 20h5v-2a4 4 0 00-5-4M9 20H4v-2a4 4 0 015-4m7-4v4m0 0v4m0-4h4m-4 0H7" />
            </svg>
            Chat App
        </div>
        <div class="flex-1 overflow-y-auto flex flex-col relative">
            <ul>
                <% users.forEach((user)=> { %>
                    <li onclick="selectUser(this,'<%= user._id %>')"
                        class="p-3 hover:bg-blue-100 cursor-pointer border-b flex items-center transition-colors duration-150">
                        <span class="text-gray-700 font-medium">
                            <%= user.username %>
                        </span>
                    </li>
                    <% }); %>
                        <% group.forEach((grp)=> { %>
                            <div class="flex items-center justify-between">
                                <li onclick="selectGroup(this,'<%= grp._id %>',2)"
                                    class="p-3 flex items-center justify-between hover:bg-green-100 cursor-pointer border-b flex-1 rounded-l-lg flex items-center transition-colors duration-150">
                                    <span class="text-green-700 font-semibold">
                                        <%= grp.username %>
                                    </span>

                                </li>

                                <% if(grp?.createdBy?.toString()===userId.toString()){%>
                                    <button onclick="openPopup('<%= grp._id %>')"
                                        class="ml-2 bg-red-500 hover:bg-red-600 text-white font-bold rounded-full w-8 h-8 flex items-center justify-center shadow transition-colors duration-150"
                                        title="Add member to group">
                                        +
                                    </button>
                                    <%}%>
                            </div>
                            <% }); %>
            </ul>

            <div class="mt-4 flex flex-col gap-2 px-4">
                <a href="/group">
                    <button
                        class="w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 rounded-lg shadow transition-colors duration-150">
                        Create Group
                    </button>
                </a>
                <form action="/logout" method="POST">
                    <button type="submit"
                        class="w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-2 rounded-lg shadow transition-colors duration-150">
                        Logout
                    </button>
                </form>
            </div>
        </div>
    </aside>

    <main class="flex-1 flex flex-col">
        <%if(selectedUser){%>
            <div id="RoomName" class="p-4 flex  flex-col  border-b bg-white shadow-sm font-semibold"
                other_user_id="<%=selectedUser._id%>" chatType="<%= isGroup ? 'Group' : 'Private' %>">
                <%= selectedUser.username %>
                    <%if(selectedUser?.members){%>
                        <span class="text-black-700 font-light text-small">
                            <%=selectedUser?.members?.length%> mem
                        </span>
                        <% }%>

            </div>
            <%}else{%>
                <div id="RoomName" class="p-4 border-b bg-white shadow-sm font-semibold" other_user_id="" chatType="">
                    None
                </div>

                <%}%>

                    <section id="chatContainer"
                        class="flex-1 px-8 py-6 min-h-[75vh] overflow-y-auto box-border space-y-8 bg-gray-50">
                        <% messages.reverse().forEach(message=> { const isSender =
                            !(message.sender?._id.toString() === userId.toString()); //
                            console.log(isSender); %>
                            <div class="flex mb-2 <%= isSender ? 'justify-start' : 'justify-end' %> p-2">
                                <div
                                    class="<%= isSender ? 'bg-orange-400 text-white':'bg-green-400 text-black' %> px-4 py-2 rounded-xl max-w-md">
                                    <p class="font-semibold text-sm mb-1">
                                        <%= message.sender?.username %>
                                    </p>
                                    <%if(message?.message){%>
                                        <p class="text-base leading-relaxed break-words">
                                            <%= message?.message %>
                                        </p>
                                        <%} else if(message?.mediaUrl){ %>
                                            <%if(message.mediaType=="image" ){%>
                                                <div class="media-box">
                                                    <img src='<%=message.mediaUrl%>' alt="Image" class="media" />
                                                </div>
                                                <%}else if(message.mediaUrl?.type=='video' ){%>
                                                    <!-- For video -->
                                                    <div class="media-box">
                                                        <video controls class="media">
                                                            <source src="<%=message.mediaUrl%>" type="video/mp4">
                                                            Your browser does not support the video tag.
                                                        </video>
                                                    </div>

                                                    <% }}%>
                                </div>
                            </div>
                            <% }) %>
                    </section>
                    <form id="chatForm" class="p-4 bg-white border-t flex gap-2">
                        <input id="fileInput" type="file" class="hidden" />
                        <label for="fileInput"
                            class="cursor-pointer bg-gray-200 px-3 py-2 rounded-full flex items-center justify-center">
                            ðŸ“Ž
                        </label>

                        <input id="textInput" type="text" placeholder="Type a message..."
                            class="flex-1 px-4 py-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-blue-400" />

                        <button id="sendBtn" type="submit"
                            class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full flex items-center gap-1">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24"
                                stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M5 13l4 4L19 7" />
                            </svg>
                        </button>
                    </form>
                    <div id="AddMemberPopup"
                        class="hidden absolute left-80 top-40 shadow-xl rounded-2xl p-8 w-full max-w-lg">
                        <!-- Members List -->
                        <div class="mb-4 relative">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Members</label>
                            <div id="membersContainer"></div>
                            <button id="addMemberBtn"
                                class="mt-2 px-4 py-2 bg-indigo-500 text-white rounded-xl hover:bg-indigo-600 transition">
                                + Add Member
                            </button>
                            <button onclick="closePopup(this , 'AddMemberPopup')"
                                class="absolute right-2 top-2 text-red-500 hover:text-red-700">&times;</button>

                        </div>

                        <!-- Submit -->
                        <button id="createGroupBtn" onclick="AddMembers(this)" data-group-id=""
                            class="w-full py-3 bg-green-500 text-white rounded-xl font-semibold hover:bg-green-600 transition">
                            Add
                        </button>
                    </div>
    </main>

    <script>
        const sendBtn = document.getElementById("sendBtn");
        const input = document.getElementById("messageInput");
        const messagesDiv = document.getElementById("chatContainer");
        const userId = "<%= userId %>";
        let otherId = document
            .getElementById("RoomName")
            .getAttribute("other_user_id");
        document.addEventListener("DOMContentLoaded", () => {
            let groupId = "<%= isGroup ? selectedUser?._id : '' %>";
            if (groupId) {
                socket.emit("joinGroup", { userId, groupId });
            } else {
                socket.emit("joinRoom", { userId, otherId });
            }

            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        });
        const socket = io({
            auth: {
                token: userId,
            },
        });

        socket.on("chatMessage", (msg) => {
            console.log(msg);
            console.log("message is here");
            const isSender = msg.sender._id !== userId;

            messagesDiv.innerHTML += `
            <div class="flex mb-2 ${isSender ? "justify-start" : "justify-end"
                } p-2">
                <div
                    class="${isSender
                    ? "bg-orange-400 text-white"
                    : "bg-green-400 text-black"
                } px-4 py-2 rounded-xl max-w-md">
                    <p>
                        ${msg.sender.username}
                    </p>
                   ${msg?.message
                    ? `<p class="text-base leading-relaxed break-words">${msg.message}</p>`
                    : msg?.file && msg.mediaType === "image"
                        ? `<div class="media-box">
           <img src="${msg.file}" alt="Image" class="media" />
         </div>`
                        : msg?.file && msg.mediaType === "video"
                            ? `<div class="media-box">
             <video controls class="media">
               <source src="${msg.file}" type="video/mp4">
               Your browser does not support the video tag.
             </video>
           </div>`
                            : ''
                }
                   

                </div>
            </div>`;

            messagesDiv.scrollBottom = messagesDiv.scrollHeight;
        });

        socket.on("groupMessage", (msg) => {
            console.log(msg);
            console.log("message is here");
            const isSender = msg.sender._id !== userId;
            // console.log(isSender)

            messagesDiv.innerHTML += `
            <div class="flex mb-2 ${isSender ? "justify-start" : "justify-end"
                } p-2">
                <div
                    class="${isSender
                    ? "bg-orange-400 text-white"
                    : "bg-green-400 text-black"
                } px-4 py-2 rounded-xl max-w-md">
                    <p>
                        ${msg.sender.username}
                    </p>
                    <p>
                        ${msg.message}
                    </p>

                </div>
            </div>`;

            messagesDiv.scrollBottom = messagesDiv.scrollHeight;
        });
        const form = document.getElementById("chatForm");
        const textInput = document.getElementById("textInput");
        const fileInput = document.getElementById("fileInput");

        form.addEventListener("submit", async (e) => {
            e.preventDefault();
            console.log(e.target);

            let chatType = document
                .getElementById("RoomName")
                .getAttribute("chatType");
            let file = fileInput.files[0];
            let text = textInput.value.trim();
            console.log(file, text);

            // Case 1: Sending text
            if (text && !file) {
                if (chatType === "Private") {
                    socket.emit("chatMessage", {
                        message: text,
                        sender: userId,
                        receiver: otherId,
                        type: "text",
                    });
                } else {
                    socket.emit("groupMessage", {
                        message: text,
                        sender: userId,
                        groupId: otherId,
                        type: "text",
                    });
                }
            }

            // Case 2: Sending file
            if (file) {
                let reader = new FileReader();
                reader.onload = () => {
                    let fileData = reader.result;
                    if (chatType === "Private") {
                        socket.emit("chatMessage", {
                            file: fileData,
                            fileName: file.name,
                            sender: userId,
                            receiver: otherId,
                            type: "file",
                        });
                    } else {
                        socket.emit("groupMessage", {
                            file: fileData,
                            fileName: file.name,
                            sender: userId,
                            groupId: otherId,
                            type: "file",
                        });
                    }
                    console.log("fileDAta is " + fileData);
                };
                reader.readAsDataURL(file); // convert file to Base64
            }

            // Clear inputs
            textInput.value = "";
            fileInput.value = "";
        });

        // sendBtn.addEventListener("click", () => {
        //     const text = input.value.trim();
        //     if (!text) return;
        //     let chatType = document
        //         .getElementById("RoomName")
        //         .getAttribute("chatType");
        //     console.log({ text, chatType });
        //     console.log(otherId);
        //     if (chatType == "Private") {
        //         socket.emit("chatMessage", {
        //             message: text,
        //             sender: userId,
        //             receiver: otherId,
        //         });
        //     } else if (chatType == "Group") {
        //         console.log(otherId);
        //         socket.emit("groupMessage", {
        //             message: text,
        //             sender: userId,
        //             groupId: otherId,
        //         });
        //         console.log("Group message sent");
        //     }

        //     input.value = "";
        // });

        async function selectUser(element, id) {
            otherId = id;
            socket.emit("joinRoom", { userId, otherId });
            window.location.href = `/chat/${id}`;
        }

        function selectGroup(element, id) {
            groupId = id;
            socket.emit("joinGroup", { userId, groupId });
            window.location.href = `/chat/${id}`;
        }
        async function addMemberToGroup(id) {
            fetch("/addMemberToGroup", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ groupId: id }),
            })
                .then((res) => res.json())
                .then((data) => {
                    if (data.success) {
                        alert("Member added to group");
                    } else {
                        alert("Error adding member to group");
                    }
                })
                .catch((err) => {
                    console.log(err);
                    alert("Error adding member to group");
                });
        }

        addMemberBtn.addEventListener("click", (e) => {
            e.preventDefault();

            const div = document.createElement("div");
            div.className = "flex items-center mb-2";

            div.innerHTML = `
        <input type="text" 
          placeholder="Enter member phone" 
          class="flex-1 px-4 py-2 border rounded-xl focus:ring-2 focus:ring-indigo-400 outline-none"/>
        <button class="ml-2 text-red-500 hover:text-red-700">&times;</button>
      `;

            // Remove input
            div.querySelector("button").addEventListener("click", () => {
                div.remove();
            });

            membersContainer.appendChild(div);
        });

        function AddMembers(ele) {
            console.log("Adding Members...");
            let groupId = ele.getAttribute('data-group-id');
            const memberInputs = membersContainer.querySelectorAll("input");
            const members = Array.from(memberInputs)
                .map((input) => input.value)
                .filter(Boolean);

            // Example POST request
            fetch("/addMemberToGroup", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ groupId, members }),
            })
                .then((res) => res.json())
                .then((data) => {
                    alert("Members Added successfully!");
                    console.log(data);
                    window.location.href = "/";
                })
                .catch((err) => {
                    alert("Error Adding members");
                    console.error(err);
                });
        };

        function openPopup(id) {

            document.getElementById("AddMemberPopup").classList.remove("hidden");
            document.getElementById('createGroupBtn').setAttribute('data-group-id', id);


        }
        function closePopup(ele, id) {
            document.getElementById(id).classList.add('hidden');
            document.getElementById('createGroupBtn').removeAttribute('data-group-id');

        }
    </script>
</body>

</html>