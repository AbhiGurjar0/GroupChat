<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Group Chat</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body class="h-screen flex bg-gray-100">

    <!-- Sidebar -->
    <aside class="w-64 bg-white shadow-lg border-r flex flex-col">
        <div class="p-4 font-bold text-lg border-b flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24"
                stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M17 20h5v-2a4 4 0 00-5-4M9 20H4v-2a4 4 0 015-4m7-4v4m0 0v4m0-4h4m-4 0H7" />
            </svg>
            Groups
        </div>
        <div class="flex-1 overflow-y-auto">
            <ul>
                <li class="p-3 hover:bg-gray-100 cursor-pointer border-b">Project A</li>
                <li class="p-3 hover:bg-gray-100 cursor-pointer border-b">Hackathon</li>
                <li class="p-3 hover:bg-gray-100 cursor-pointer border-b">Friends</li>
            </ul>
        </div>
    </aside>


    <main class="flex-1 flex flex-col">

        <div class="p-4 border-b bg-white shadow-sm font-semibold">
            Group: Project A
        </div>


        <div id="messages" class="flex-1 overflow-y-auto p-4 space-y-3 bg-gray-50 ">
            <% if (messages.length===0) { %>
                <div class="text-gray-500 text-center mt-10">No messages yet. Start the conversation!</div>
                <% } else { %>
                    <div class="flex flex-col gap-3">
                        <% messages.reverse().forEach((msg)=> { %>

                            <div
                                class="flex <%= msg.sender._id.toString() === userId.toString() ? 'justify-end' : 'justify-start' %>">
                                <div class="p-3 rounded-lg shadow-sm max-w-md 
                      <%= msg.sender._id.toString() === userId.toString() 
                          ? 'bg-indigo-500 text-white rounded-br-none' 
                          : 'bg-white text-gray-800 rounded-bl-none' %>">
                                    <%= msg.message %>

                                </div>
                            </div>
                            <% }) %>
                    </div>
                    <% } %>
        </div>



        <div class="p-4 bg-white border-t flex gap-2">
            <input id="messageInput" type="text" placeholder="Type a message..."
                class="flex-1 px-4 py-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-blue-400" />
            <button id="sendBtn"
                class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
            </button>
        </div>
    </main>

    <script>
        const sendBtn = document.getElementById("sendBtn");
        const input = document.getElementById("messageInput");
        const messagesDiv = document.getElementById("messages");
        const userId = "<%= userId %>";
        const socket = io({
            auth: {
                token: '<%= userId %>'
            }
        });


        socket.on('chat message', (msg) => {

            const wrapper = document.createElement("div");
            wrapper.classList.add("flex", "mb-2");
            console.log(msg)
            console.log(userId)
            if (msg.userId.toString() === userId.toString()) {
                wrapper.classList.add("justify-end");
            } else {
                wrapper.classList.add("justify-start");
            }

            const msgDiv = document.createElement("div");
            msgDiv.classList.add(
                "p-3",
                "rounded-lg",
                "shadow-sm",
                "max-w-xs",
                "md:max-w-md"
            );

            if (msg.userId.toString() === userId.toString()) {

                msgDiv.classList.add("bg-indigo-500", "text-white", "rounded-br-none");
            } else {
                msgDiv.classList.add("bg-white", "text-gray-800", "rounded-bl-none");
            }

            msgDiv.textContent = msg.msg;

            wrapper.appendChild(msgDiv);
            messagesDiv.appendChild(wrapper);

            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        });

        sendBtn.addEventListener("click", () => {
            const text = input.value.trim();
            if (!text) return;

            socket.emit('chat message', input.value);
            input.value = '';

            fetch('/message', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ message: text })
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Message sent:', data);
                })
                .catch(error => console.error('Error:', error));
        });




    </script>


</body>

</html>